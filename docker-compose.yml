# Licensed to Muhammad Hamadto
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
#
#   See the NOTICE file distributed with this work for additional information regarding copyright ownership.
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

version: "3.9"
services:
  spring-native-aws-lambda-function-infra:
    image: ghcr.io/muhamadto/spring-native-amazonlinux2-builder:21-amazonlinux2-awscliv2
    volumes:
      - ./:/app
      - ${M2_REPO}:/home/worker/.m2
    working_dir: /app
    user: worker
    environment:
      SPRING_MAIN_WEBAPPLICATIONTYPE: servlet
      AWS_DEFAULT_REGION: ap-southeast-2
      AWS_REGION: ap-southeast-2
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
      AWS_ENDPOINT_URL: http://localstack:4566
      MAVEN_OPTS: |
        -DskipTests=true
        -Dcheckstyle.skip=true
        -Djacoco.skip=true
        -Dsonar.skip=true
        -Dskip.it=true
        -Dmaven.javadoc.skip=true
        -Dmaven.source.skip=true
        -Dspring-boot.run.profiles=local
    entrypoint:
      - bash
      - -c
    command: |
      '
      aws --version &&

      source /usr/local/bin/awscliv2-util/aws &&

      print_info_message "block" "Creating 'spring-native-aws-lambda-function'" &&

      print_info_message "divider" "Package GraalVM function" &&

      ./mvnw -ntp clean -Pnative -DskipTests native:compile package -pl spring-native-aws-lambda-function &&

      print_info_message "divider" "Creating LAMBDA function" &&
      lambda_create_function lambda-FUNCTION provided.al2023 512 ./spring-native-aws-lambda-function/target/spring-native-aws-lambda-function-native-zip.zip spring-native-aws-lambda-function &&
      lambda_wait_for_function lambda-FUNCTION &&
      lambda_list_functions &&
      
      print_info_message "divider" "Creating API Gateway" &&
      REST_API_ID="$(apigateway_create_restApi "somerestapiname")" &&
      RESOURCE_ID="$(apigateway_create_resource "$$REST_API_ID" "somePathId")"      
      apigateway_create_method "$$REST_API_ID" "$$RESOURCE_ID" "POST" &&
      apigateway_create_lambda_integration "$$REST_API_ID" "$$RESOURCE_ID" "POST" "arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-2:000000000000:function:lambda-FUNCTION/invocations" &&
      apigateway_create_deployment "$$REST_API_ID" "test" &&
      --rest-api-id &&
      
      print_info_message "plain" "Endpoint available at: http://localhost:4566/restapis/$$REST_API_ID/test/_user_request_/test" &&
      
      print_info_message "block" "Successfully creating 'spring-native-aws-lambda-function'"
      '
    depends_on:
      - localstack

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME:-localstack-main}"
    image: localstack/localstack
    ports:
      - "127.0.0.1:4566:4566" # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559" # external services port range
    environment:
      # LocalStack configuration: https://docs.localstack.cloud/references/configuration/
      - DEBUG=${DEBUG:-0}
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
